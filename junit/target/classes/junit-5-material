@Test:
-----
mark method as test method

@BeforeEach:
------------
run before each @Test case.used for common initialization logic  for each test method
same as @Before in junit 4

@AfterEach:
------------
run after each @Test case .used for common cleanup logic  for each test method
same as @After in junit 4

@BeforeAll:
----------
 used to executed before all tests in the current test class. 

 @AfterAll:
 ----------
used to executed after all tests in the current test class. 

@DisplayName:
-------------
if we want to display different name other than method namein test results.
	Ex: @Test
		@DisplayName("lenght test")
		void lengthTest() {
			String name = "chenchu";
			assertEquals(7, name.length());
		}


@ParameterizedTest:
------------------

perform same test with different runtime values.
test with multiple values  by passing each values from single value as parameter.

	Ex:

		@ParameterizedTest
		@ValueSource(strings= {"abc","cd","e","aaa"})
		void patameterizedTest(String str) {
			assertTrue(str.length() > 0);
		}

@RepeatedTest(n):
==================
repeat  test method executuion  n times 
This is new in junit 5

@Disabled:
---------
to disable the test method execution tempararly if you use method level
to disable the test class execution tempararly if you use class level

@Nested:
=======
This is new in junit 5
provide nested way of test cases


Assert methods:
---------------
	assertFalse
	assertEquals
	assertNotNull
	assertArrayEquals(expectedArray,actualArray)	
	assertThrows :
		used for test exceptions in test method
		Ex: 
		@Test
		void exceptionEexample() {
			String str = null;
			assertThrows(NullPointerException.class, () -> str.length());
		}


Classes in junit 5:
------------------
TestInfo:
	1)this class know test cases information
		ex:testInfo.getDisplayName()  -> return current running test method name
	2) this is junit 5 feature





Notes:
======
1) In junit 4  test method modifier should be public but in junit 5 it is optional.
2) in junit4 @Ignore for disable test but in junit 5 it is @Disabled
3)in junit 4 @BeforeClass but in junit 5 @BeforeAll
4)in junit 4 @AfterClass but in junit 5 @AfterAll
5)in junit 4 @BeforeEach but in junit 5 @Before
6)in junit 4 @AfterEach but in junit 5 @After
7)in junit 4 @Category but in junit 5 @Tag
8)in junit 4 expected but in junit5 AssertThrows
9)in junit 4 timeout but in junit5 AssertTimeout